x-common-env: &common-env
  NETWORK: "stagenet"
  FINALITY_WINDOW: "30"
  RUST_LOG: "info"

services:
  monerod0:
    image: ghcr.io/sethforprivacy/simple-monerod:latest
    restart: unless-stopped
    command:
      - --stagenet
      - --p2p-bind-port=58080
      - --rpc-bind-port=58081
      - --rpc-bind-ip=0.0.0.0
      - --zmq-rpc-bind-port=58082
      - --zmq-rpc-bind-ip=0.0.0.0
      - --no-igd
      - --hide-my-port
      - --log-level=0
      - --p2p-bind-ip=0.0.0.0
      - --confirm-external-bind
      - --add-exclusive-node=monerod1:51080
      - --add-exclusive-node=monerod2:52080
      - --add-exclusive-node=monerod3:53080
      - --fixed-difficulty=2000
      - --disable-rpc-ban
    ports:
      - "58081:58081"  # RPC
      - "58082:58082"  # ZMQ
      - "58080:58080"   # P2P
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:58081/json_rpc"]
      interval: 30s
      timeout: 3s
      retries: 20
    volumes:
      - ./data/node_01:/home/monero/.bitmonero

  monerod1:
    image: ghcr.io/sethforprivacy/simple-monerod:latest
    restart: unless-stopped
    command:
      - --stagenet
      - --p2p-bind-port=51080
      - --rpc-bind-port=51081
      - --rpc-bind-ip=0.0.0.0
      - --zmq-rpc-bind-port=51082
      - --zmq-rpc-bind-ip=0.0.0.0
      - --no-igd
      - --hide-my-port
      - --log-level=0
      - --p2p-bind-ip=0.0.0.0
      - --confirm-external-bind
      - --add-exclusive-node=monerod0:58080
      - --add-exclusive-node=monerod2:52080
      - --add-exclusive-node=monerod3:53080
      - --fixed-difficulty=2000
      - --disable-rpc-ban
    ports:
      - "51081:51081"  # RPC
      - "51082:51082"  # ZMQ
      - "51080:51080"   # P2P
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:51081/json_rpc"]
      interval: 30s
      timeout: 3s
      retries: 20
    volumes:
      - ./data/node_02:/home/monero/.bitmonero

  monerod2:
    image: ghcr.io/sethforprivacy/simple-monerod:latest
    restart: unless-stopped
    command:
      - --stagenet
      - --p2p-bind-port=52080
      - --rpc-bind-port=52081
      - --rpc-bind-ip=0.0.0.0
      - --zmq-rpc-bind-port=52082
      - --zmq-rpc-bind-ip=0.0.0.0
      - --no-igd
      - --hide-my-port
      - --log-level=0
      - --p2p-bind-ip=0.0.0.0
      - --confirm-external-bind
      - --add-exclusive-node=monerod0:58080
      - --add-exclusive-node=monerod1:51080
      - --add-exclusive-node=monerod3:53080
      - --fixed-difficulty=2000
      - --disable-rpc-ban
    ports:
      - "52081:52081"  # RPC
      - "52082:52082"  # ZMQ
      - "52080:52080"   # P2P
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:52081/json_rpc"]
      interval: 30s
      timeout: 3s
      retries: 20
    volumes:
      - ./data/node_03:/home/monero/.bitmonero

  monerod3:
    image: ghcr.io/sethforprivacy/simple-monerod:latest
    restart: unless-stopped
    command:
      - --stagenet
      - --p2p-bind-port=53080
      - --rpc-bind-port=53081
      - --rpc-bind-ip=0.0.0.0
      - --zmq-rpc-bind-port=53082
      - --zmq-rpc-bind-ip=0.0.0.0
      - --no-igd
      - --hide-my-port
      - --log-level=0
      - --p2p-bind-ip=0.0.0.0
      - --confirm-external-bind
      - --add-exclusive-node=monerod0:58080
      - --add-exclusive-node=monerod1:51080
      - --add-exclusive-node=monerod2:52080
      - --fixed-difficulty=2000
      - --disable-rpc-ban
    ports:
      - "53081:53081"  # RPC
      - "53082:53082"  # ZMQ
      - "53080:53080"   # P2P
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:53081/json_rpc"]
      interval: 30s
      timeout: 3s
      retries: 20
    volumes:
      - ./data/node_04:/home/monero/.bitmonero

  postgres:
    image: explorer-postgres:dev
    build:
      context: ..
      dockerfile: ops/Dockerfile.postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: explorer
      POSTGRES_PASSWORD: explorer
      POSTGRES_DB: explorer
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U explorer -d explorer"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    image: explorer-api:dev
    build:
      context: ..
      dockerfile: ops/Dockerfile.api
    pull_policy: never
    depends_on:
      monerod0:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      <<: *common-env
      DATABASE_URL: "postgres://explorer:explorer@postgres:5432/explorer"
      XMR_RPC_URL: "http://monerod0:58081/json_rpc"
      XMR_ZMQ_URL: "tcp://monerod0:58082"
      REDIS_URL: "redis://redis:6379"
    ports:
      - "8081:8081"
    command: ["--bind", "0.0.0.0:8081"]
    healthcheck:
      test: ["CMD", "/app/api", "probe", "--url", "http://localhost:8081/healthz"]
      interval: 10s
      timeout: 3s
      retries: 20

  ingestor:
    image: explorer-ingestor:dev
    build:
      context: ..
      dockerfile: ops/Dockerfile.ingestor
    pull_policy: never
    depends_on:
      monerod0:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      <<: *common-env
      DATABASE_URL: "postgres://explorer:explorer@postgres:5432/explorer"
      XMR_RPC_URL: "http://monerod0:58081/json_rpc"
      XMR_ZMQ_URL: "tcp://monerod0:58082"
      BOOTSTRAP: "true"
      INGEST_CONCURRENCY: "16"
      RPC_RPS: "40"
    command: ["run"]
    restart: unless-stopped

  web:
    image: explorer-web:dev
    build:
      context: ..
      dockerfile: ops/Dockerfile.web
    pull_policy: never
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: unless-stopped

  # clickhouse: # Optional analytics (commented by default)
  #   image: clickhouse/clickhouse-server:24.8-alpine
  #   restart: unless-stopped
  #   ulimits:
  #     nofile:
  #       soft: 262144
  #       hard: 262144
  #   ports:
  #     - "8123:8123"
  #     - "9000:9000"
  #   healthcheck:
  #     test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8123/ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 20

volumes:
  pgdata:
